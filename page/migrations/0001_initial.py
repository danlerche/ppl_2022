# Generated by Django 3.2.8 on 2022-05-05 18:44

from django.db import migrations, models
import django.db.models.deletion
import wagtail.contrib.table_block.blocks
import wagtail.contrib.typed_table_block.blocks
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.documents.blocks
import wagtail.embeds.blocks
import wagtail.images.blocks
import wagtailgeowidget.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0066_collection_management_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='AllPurposePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('content', wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.CharBlock(form_classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('BlockQuoteBlock', wagtail.core.blocks.BlockQuoteBlock(template='page/blocks/block_quote.html')), ('text_only_table', wagtail.contrib.table_block.blocks.TableBlock()), ('richtext_table', wagtail.contrib.typed_table_block.blocks.TypedTableBlock([('rich_text', wagtail.core.blocks.RichTextBlock())])), ('URLBlock', wagtail.core.blocks.URLBlock()), ('EmailBlock', wagtail.core.blocks.EmailBlock()), ('all_upcoming_events', wagtail.core.blocks.BooleanBlock(help_text='If checked, all upcoming events will display', icon='tasks', required=False)), ('calendar_upcoming', wagtail.core.blocks.ChoiceBlock(choices=[(1, 'For Kids'), (2, 'For Adults'), (3, 'For Tweens'), (4, 'For Teens'), (5, 'All Ages')], icon='date')), ('DateBlock', wagtail.core.blocks.DateBlock()), ('TimeBlock', wagtail.core.blocks.TimeBlock()), ('DateTimeBlock', wagtail.core.blocks.DateBlock()), ('PageChooserBlock', wagtail.core.blocks.PageChooserBlock()), ('DocumentChooserBlock', wagtail.documents.blocks.DocumentChooserBlock()), ('PhoneNumberBlock', wagtail.core.blocks.TextBlock()), ('EmbedBlock', wagtail.embeds.blocks.EmbedBlock()), ('ppl_map', wagtail.core.blocks.BooleanBlock(help_text='If checked, a Google map will appear', icon='user', required=False)), ('map', wagtail.core.blocks.StructBlock([('address', wagtailgeowidget.blocks.GeoAddressBlock(required=True)), ('map', wagtailgeowidget.blocks.GeoBlock(address_field='address'))], icon='user', template='page/blocks/map.html')), ('show_business_hours', wagtail.core.blocks.BooleanBlock(help_text='If checked, the library hours will display on the page', icon='user', required=False)), ('show_next_closure', wagtail.core.blocks.BooleanBlock(help_text='If checked, the next library closure will display', icon='user', required=False)), ('show_all_closures', wagtail.core.blocks.BooleanBlock(help_text='If checked, all upcoming library closures will be shown', icon='user', required=False)), ('bookClub', wagtail.core.blocks.StructBlock([('book_club_name', wagtail.core.blocks.CharBlock()), ('book_club_day_of_the_week', wagtail.core.blocks.TextBlock()), ('book_club_PDF', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('book_club_time', wagtail.core.blocks.TimeBlock()), ('books', wagtail.core.blocks.StreamBlock([('book', wagtail.core.blocks.StructBlock([('book_name', wagtail.core.blocks.CharBlock()), ('author_name', wagtail.core.blocks.CharBlock()), ('reading_date', wagtail.core.blocks.DateBlock()), ('book_description', wagtail.core.blocks.RichTextBlock()), ('book_cover', wagtail.images.blocks.ImageChooserBlock(required=False))], template='page/blocks/books.html'))]))], icon='openquote', template='page/blocks/book_club.html')), ('columnBlock', wagtail.core.blocks.StructBlock([('column', wagtail.core.blocks.StreamBlock([('richtext', wagtail.core.blocks.RichTextBlock()), ('block_quote', wagtail.core.blocks.BlockQuoteBlock(template='page/blocks/block_quote.html')), ('image', wagtail.images.blocks.ImageChooserBlock(required=False))]))], icon='table', template='page/blocks/column.html')), ('accordion', wagtail.core.blocks.StructBlock([('accordion_name', wagtail.core.blocks.CharBlock()), ('only_one_open', wagtail.core.blocks.BooleanBlock(help_text='Automatically close all other accordions while another is open', required=False)), ('accordion_body', wagtail.core.blocks.StreamBlock([('accordion_items', wagtail.core.blocks.StructBlock([('accordion_item_title', wagtail.core.blocks.CharBlock()), ('accordion_description', wagtail.core.blocks.RichTextBlock()), ('show_by_default', wagtail.core.blocks.BooleanBlock(help_text='Display accordion as open by default', required=False))]))]))], icon='collapse-down', template='page/blocks/accordion.html'))], blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
